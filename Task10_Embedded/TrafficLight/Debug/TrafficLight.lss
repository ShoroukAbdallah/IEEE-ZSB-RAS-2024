
TrafficLight.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005f0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000050  00000000  00000000  00000644  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000063  00000000  00000000  00000694  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000019e  00000000  00000000  000006f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000103  00000000  00000000  00000895  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000379  00000000  00000000  00000998  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000060  00000000  00000000  00000d14  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000012f  00000000  00000000  00000d74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_macinfo 00001bca  00000000  00000000  00000ea3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000040  00000000  00000000  00002a6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 b8 02 	call	0x570	; 0x570 <main>
  64:	0c 94 f6 02 	jmp	0x5ec	; 0x5ec <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <GIO_SetPinDirection>:
#include "../../LIB/MATH.h"
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

u8 GIO_SetPinDirection(u8 copy_u8PORTID, u8 copy_u8PINID, u8 copy_u8Direction) {
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	2e 97       	sbiw	r28, 0x0e	; 14
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	8a 83       	std	Y+2, r24	; 0x02
  82:	6b 83       	std	Y+3, r22	; 0x03
  84:	4c 83       	std	Y+4, r20	; 0x04
	u8 local_error_direction = 0;
  86:	19 82       	std	Y+1, r1	; 0x01
	if ((copy_u8PORTID <= DIO_PortD) && (copy_u8PINID <= DIO_Pin7)
  88:	8a 81       	ldd	r24, Y+2	; 0x02
  8a:	84 30       	cpi	r24, 0x04	; 4
  8c:	08 f0       	brcs	.+2      	; 0x90 <GIO_SetPinDirection+0x24>
  8e:	0d c1       	rjmp	.+538    	; 0x2aa <GIO_SetPinDirection+0x23e>
  90:	8b 81       	ldd	r24, Y+3	; 0x03
  92:	88 30       	cpi	r24, 0x08	; 8
  94:	08 f0       	brcs	.+2      	; 0x98 <GIO_SetPinDirection+0x2c>
  96:	09 c1       	rjmp	.+530    	; 0x2aa <GIO_SetPinDirection+0x23e>
  98:	8c 81       	ldd	r24, Y+4	; 0x04
  9a:	81 30       	cpi	r24, 0x01	; 1
  9c:	21 f0       	breq	.+8      	; 0xa6 <GIO_SetPinDirection+0x3a>
  9e:	8c 81       	ldd	r24, Y+4	; 0x04
  a0:	88 23       	and	r24, r24
  a2:	09 f0       	breq	.+2      	; 0xa6 <GIO_SetPinDirection+0x3a>
  a4:	02 c1       	rjmp	.+516    	; 0x2aa <GIO_SetPinDirection+0x23e>
			&& ((copy_u8Direction == DIO_OutputPinDirection)
					|| (copy_u8Direction == DIO_InputPinDirection))) {
		switch (copy_u8PORTID) {
  a6:	8a 81       	ldd	r24, Y+2	; 0x02
  a8:	28 2f       	mov	r18, r24
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	3e 87       	std	Y+14, r19	; 0x0e
  ae:	2d 87       	std	Y+13, r18	; 0x0d
  b0:	8d 85       	ldd	r24, Y+13	; 0x0d
  b2:	9e 85       	ldd	r25, Y+14	; 0x0e
  b4:	81 30       	cpi	r24, 0x01	; 1
  b6:	91 05       	cpc	r25, r1
  b8:	09 f4       	brne	.+2      	; 0xbc <GIO_SetPinDirection+0x50>
  ba:	4f c0       	rjmp	.+158    	; 0x15a <GIO_SetPinDirection+0xee>
  bc:	2d 85       	ldd	r18, Y+13	; 0x0d
  be:	3e 85       	ldd	r19, Y+14	; 0x0e
  c0:	22 30       	cpi	r18, 0x02	; 2
  c2:	31 05       	cpc	r19, r1
  c4:	2c f4       	brge	.+10     	; 0xd0 <GIO_SetPinDirection+0x64>
  c6:	8d 85       	ldd	r24, Y+13	; 0x0d
  c8:	9e 85       	ldd	r25, Y+14	; 0x0e
  ca:	00 97       	sbiw	r24, 0x00	; 0
  cc:	71 f0       	breq	.+28     	; 0xea <GIO_SetPinDirection+0x7e>
  ce:	eb c0       	rjmp	.+470    	; 0x2a6 <GIO_SetPinDirection+0x23a>
  d0:	2d 85       	ldd	r18, Y+13	; 0x0d
  d2:	3e 85       	ldd	r19, Y+14	; 0x0e
  d4:	22 30       	cpi	r18, 0x02	; 2
  d6:	31 05       	cpc	r19, r1
  d8:	09 f4       	brne	.+2      	; 0xdc <GIO_SetPinDirection+0x70>
  da:	77 c0       	rjmp	.+238    	; 0x1ca <GIO_SetPinDirection+0x15e>
  dc:	8d 85       	ldd	r24, Y+13	; 0x0d
  de:	9e 85       	ldd	r25, Y+14	; 0x0e
  e0:	83 30       	cpi	r24, 0x03	; 3
  e2:	91 05       	cpc	r25, r1
  e4:	09 f4       	brne	.+2      	; 0xe8 <GIO_SetPinDirection+0x7c>
  e6:	a9 c0       	rjmp	.+338    	; 0x23a <GIO_SetPinDirection+0x1ce>
  e8:	de c0       	rjmp	.+444    	; 0x2a6 <GIO_SetPinDirection+0x23a>
		case DIO_PortA:

			switch (copy_u8Direction) {
  ea:	8c 81       	ldd	r24, Y+4	; 0x04
  ec:	28 2f       	mov	r18, r24
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	3c 87       	std	Y+12, r19	; 0x0c
  f2:	2b 87       	std	Y+11, r18	; 0x0b
  f4:	8b 85       	ldd	r24, Y+11	; 0x0b
  f6:	9c 85       	ldd	r25, Y+12	; 0x0c
  f8:	00 97       	sbiw	r24, 0x00	; 0
  fa:	d1 f0       	breq	.+52     	; 0x130 <GIO_SetPinDirection+0xc4>
  fc:	2b 85       	ldd	r18, Y+11	; 0x0b
  fe:	3c 85       	ldd	r19, Y+12	; 0x0c
 100:	21 30       	cpi	r18, 0x01	; 1
 102:	31 05       	cpc	r19, r1
 104:	09 f0       	breq	.+2      	; 0x108 <GIO_SetPinDirection+0x9c>
 106:	cf c0       	rjmp	.+414    	; 0x2a6 <GIO_SetPinDirection+0x23a>
			case DIO_OutputPinDirection:
				SET_BIT(DDRA, copy_u8PINID);
 108:	aa e3       	ldi	r26, 0x3A	; 58
 10a:	b0 e0       	ldi	r27, 0x00	; 0
 10c:	ea e3       	ldi	r30, 0x3A	; 58
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	48 2f       	mov	r20, r24
 114:	8b 81       	ldd	r24, Y+3	; 0x03
 116:	28 2f       	mov	r18, r24
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 2e       	mov	r0, r18
 120:	02 c0       	rjmp	.+4      	; 0x126 <GIO_SetPinDirection+0xba>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	0a 94       	dec	r0
 128:	e2 f7       	brpl	.-8      	; 0x122 <GIO_SetPinDirection+0xb6>
 12a:	84 2b       	or	r24, r20
 12c:	8c 93       	st	X, r24
 12e:	bb c0       	rjmp	.+374    	; 0x2a6 <GIO_SetPinDirection+0x23a>
				break;
			case DIO_InputPinDirection:
				CLR_BIT(DDRA, copy_u8PINID);
 130:	aa e3       	ldi	r26, 0x3A	; 58
 132:	b0 e0       	ldi	r27, 0x00	; 0
 134:	ea e3       	ldi	r30, 0x3A	; 58
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	48 2f       	mov	r20, r24
 13c:	8b 81       	ldd	r24, Y+3	; 0x03
 13e:	28 2f       	mov	r18, r24
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 2e       	mov	r0, r18
 148:	02 c0       	rjmp	.+4      	; 0x14e <GIO_SetPinDirection+0xe2>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	0a 94       	dec	r0
 150:	e2 f7       	brpl	.-8      	; 0x14a <GIO_SetPinDirection+0xde>
 152:	80 95       	com	r24
 154:	84 23       	and	r24, r20
 156:	8c 93       	st	X, r24
 158:	a6 c0       	rjmp	.+332    	; 0x2a6 <GIO_SetPinDirection+0x23a>
				break;
			}
			break;
		case DIO_PortB:
			switch (copy_u8Direction) {
 15a:	8c 81       	ldd	r24, Y+4	; 0x04
 15c:	28 2f       	mov	r18, r24
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	3a 87       	std	Y+10, r19	; 0x0a
 162:	29 87       	std	Y+9, r18	; 0x09
 164:	89 85       	ldd	r24, Y+9	; 0x09
 166:	9a 85       	ldd	r25, Y+10	; 0x0a
 168:	00 97       	sbiw	r24, 0x00	; 0
 16a:	d1 f0       	breq	.+52     	; 0x1a0 <GIO_SetPinDirection+0x134>
 16c:	29 85       	ldd	r18, Y+9	; 0x09
 16e:	3a 85       	ldd	r19, Y+10	; 0x0a
 170:	21 30       	cpi	r18, 0x01	; 1
 172:	31 05       	cpc	r19, r1
 174:	09 f0       	breq	.+2      	; 0x178 <GIO_SetPinDirection+0x10c>
 176:	97 c0       	rjmp	.+302    	; 0x2a6 <GIO_SetPinDirection+0x23a>
			case DIO_OutputPinDirection:
				SET_BIT(DDRA, copy_u8PINID);
 178:	aa e3       	ldi	r26, 0x3A	; 58
 17a:	b0 e0       	ldi	r27, 0x00	; 0
 17c:	ea e3       	ldi	r30, 0x3A	; 58
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	48 2f       	mov	r20, r24
 184:	8b 81       	ldd	r24, Y+3	; 0x03
 186:	28 2f       	mov	r18, r24
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	02 2e       	mov	r0, r18
 190:	02 c0       	rjmp	.+4      	; 0x196 <GIO_SetPinDirection+0x12a>
 192:	88 0f       	add	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	0a 94       	dec	r0
 198:	e2 f7       	brpl	.-8      	; 0x192 <GIO_SetPinDirection+0x126>
 19a:	84 2b       	or	r24, r20
 19c:	8c 93       	st	X, r24
 19e:	83 c0       	rjmp	.+262    	; 0x2a6 <GIO_SetPinDirection+0x23a>
				break;
			case DIO_InputPinDirection:
				CLR_BIT(DDRA, copy_u8PINID);
 1a0:	aa e3       	ldi	r26, 0x3A	; 58
 1a2:	b0 e0       	ldi	r27, 0x00	; 0
 1a4:	ea e3       	ldi	r30, 0x3A	; 58
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	48 2f       	mov	r20, r24
 1ac:	8b 81       	ldd	r24, Y+3	; 0x03
 1ae:	28 2f       	mov	r18, r24
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 2e       	mov	r0, r18
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <GIO_SetPinDirection+0x152>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	0a 94       	dec	r0
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <GIO_SetPinDirection+0x14e>
 1c2:	80 95       	com	r24
 1c4:	84 23       	and	r24, r20
 1c6:	8c 93       	st	X, r24
 1c8:	6e c0       	rjmp	.+220    	; 0x2a6 <GIO_SetPinDirection+0x23a>
				break;
			}
			break;
		case DIO_PortC:
			switch (copy_u8Direction) {
 1ca:	8c 81       	ldd	r24, Y+4	; 0x04
 1cc:	28 2f       	mov	r18, r24
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	38 87       	std	Y+8, r19	; 0x08
 1d2:	2f 83       	std	Y+7, r18	; 0x07
 1d4:	8f 81       	ldd	r24, Y+7	; 0x07
 1d6:	98 85       	ldd	r25, Y+8	; 0x08
 1d8:	00 97       	sbiw	r24, 0x00	; 0
 1da:	d1 f0       	breq	.+52     	; 0x210 <GIO_SetPinDirection+0x1a4>
 1dc:	2f 81       	ldd	r18, Y+7	; 0x07
 1de:	38 85       	ldd	r19, Y+8	; 0x08
 1e0:	21 30       	cpi	r18, 0x01	; 1
 1e2:	31 05       	cpc	r19, r1
 1e4:	09 f0       	breq	.+2      	; 0x1e8 <GIO_SetPinDirection+0x17c>
 1e6:	5f c0       	rjmp	.+190    	; 0x2a6 <GIO_SetPinDirection+0x23a>
			case DIO_OutputPinDirection:
				SET_BIT(DDRA, copy_u8PINID);
 1e8:	aa e3       	ldi	r26, 0x3A	; 58
 1ea:	b0 e0       	ldi	r27, 0x00	; 0
 1ec:	ea e3       	ldi	r30, 0x3A	; 58
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	48 2f       	mov	r20, r24
 1f4:	8b 81       	ldd	r24, Y+3	; 0x03
 1f6:	28 2f       	mov	r18, r24
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 2e       	mov	r0, r18
 200:	02 c0       	rjmp	.+4      	; 0x206 <GIO_SetPinDirection+0x19a>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	0a 94       	dec	r0
 208:	e2 f7       	brpl	.-8      	; 0x202 <GIO_SetPinDirection+0x196>
 20a:	84 2b       	or	r24, r20
 20c:	8c 93       	st	X, r24
 20e:	4b c0       	rjmp	.+150    	; 0x2a6 <GIO_SetPinDirection+0x23a>
				break;
			case DIO_InputPinDirection:
				CLR_BIT(DDRA, copy_u8PINID);
 210:	aa e3       	ldi	r26, 0x3A	; 58
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	ea e3       	ldi	r30, 0x3A	; 58
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	48 2f       	mov	r20, r24
 21c:	8b 81       	ldd	r24, Y+3	; 0x03
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	02 2e       	mov	r0, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <GIO_SetPinDirection+0x1c2>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	0a 94       	dec	r0
 230:	e2 f7       	brpl	.-8      	; 0x22a <GIO_SetPinDirection+0x1be>
 232:	80 95       	com	r24
 234:	84 23       	and	r24, r20
 236:	8c 93       	st	X, r24
 238:	36 c0       	rjmp	.+108    	; 0x2a6 <GIO_SetPinDirection+0x23a>
				break;
			}
			break;
		case DIO_PortD:
			switch (copy_u8Direction) {
 23a:	8c 81       	ldd	r24, Y+4	; 0x04
 23c:	28 2f       	mov	r18, r24
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	3e 83       	std	Y+6, r19	; 0x06
 242:	2d 83       	std	Y+5, r18	; 0x05
 244:	8d 81       	ldd	r24, Y+5	; 0x05
 246:	9e 81       	ldd	r25, Y+6	; 0x06
 248:	00 97       	sbiw	r24, 0x00	; 0
 24a:	c9 f0       	breq	.+50     	; 0x27e <GIO_SetPinDirection+0x212>
 24c:	2d 81       	ldd	r18, Y+5	; 0x05
 24e:	3e 81       	ldd	r19, Y+6	; 0x06
 250:	21 30       	cpi	r18, 0x01	; 1
 252:	31 05       	cpc	r19, r1
 254:	41 f5       	brne	.+80     	; 0x2a6 <GIO_SetPinDirection+0x23a>
			case DIO_OutputPinDirection:
				SET_BIT(DDRA, copy_u8PINID);
 256:	aa e3       	ldi	r26, 0x3A	; 58
 258:	b0 e0       	ldi	r27, 0x00	; 0
 25a:	ea e3       	ldi	r30, 0x3A	; 58
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	48 2f       	mov	r20, r24
 262:	8b 81       	ldd	r24, Y+3	; 0x03
 264:	28 2f       	mov	r18, r24
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 2e       	mov	r0, r18
 26e:	02 c0       	rjmp	.+4      	; 0x274 <GIO_SetPinDirection+0x208>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	0a 94       	dec	r0
 276:	e2 f7       	brpl	.-8      	; 0x270 <GIO_SetPinDirection+0x204>
 278:	84 2b       	or	r24, r20
 27a:	8c 93       	st	X, r24
 27c:	14 c0       	rjmp	.+40     	; 0x2a6 <GIO_SetPinDirection+0x23a>
				break;
			case DIO_InputPinDirection:
				CLR_BIT(DDRA, copy_u8PINID);
 27e:	aa e3       	ldi	r26, 0x3A	; 58
 280:	b0 e0       	ldi	r27, 0x00	; 0
 282:	ea e3       	ldi	r30, 0x3A	; 58
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	48 2f       	mov	r20, r24
 28a:	8b 81       	ldd	r24, Y+3	; 0x03
 28c:	28 2f       	mov	r18, r24
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	02 2e       	mov	r0, r18
 296:	02 c0       	rjmp	.+4      	; 0x29c <GIO_SetPinDirection+0x230>
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	0a 94       	dec	r0
 29e:	e2 f7       	brpl	.-8      	; 0x298 <GIO_SetPinDirection+0x22c>
 2a0:	80 95       	com	r24
 2a2:	84 23       	and	r24, r20
 2a4:	8c 93       	st	X, r24
				break;
			}
			break;
		}
		local_error_direction = 1;
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	89 83       	std	Y+1, r24	; 0x01
	}
	return local_error_direction;
 2aa:	89 81       	ldd	r24, Y+1	; 0x01
}
 2ac:	2e 96       	adiw	r28, 0x0e	; 14
 2ae:	0f b6       	in	r0, 0x3f	; 63
 2b0:	f8 94       	cli
 2b2:	de bf       	out	0x3e, r29	; 62
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	cd bf       	out	0x3d, r28	; 61
 2b8:	cf 91       	pop	r28
 2ba:	df 91       	pop	r29
 2bc:	08 95       	ret

000002be <GIO_SetPinValue>:

u8 GIO_SetPinValue(u8 copy_u8PORTID, u8 copy_u8PINID, u8 copy_u8Value) {
 2be:	df 93       	push	r29
 2c0:	cf 93       	push	r28
 2c2:	cd b7       	in	r28, 0x3d	; 61
 2c4:	de b7       	in	r29, 0x3e	; 62
 2c6:	2e 97       	sbiw	r28, 0x0e	; 14
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	f8 94       	cli
 2cc:	de bf       	out	0x3e, r29	; 62
 2ce:	0f be       	out	0x3f, r0	; 63
 2d0:	cd bf       	out	0x3d, r28	; 61
 2d2:	8a 83       	std	Y+2, r24	; 0x02
 2d4:	6b 83       	std	Y+3, r22	; 0x03
 2d6:	4c 83       	std	Y+4, r20	; 0x04
	u8 local_error_value = 0;
 2d8:	19 82       	std	Y+1, r1	; 0x01
	if (copy_u8PORTID <= DIO_PortD && copy_u8PINID <= DIO_Pin7
 2da:	8a 81       	ldd	r24, Y+2	; 0x02
 2dc:	84 30       	cpi	r24, 0x04	; 4
 2de:	08 f0       	brcs	.+2      	; 0x2e2 <GIO_SetPinValue+0x24>
 2e0:	0d c1       	rjmp	.+538    	; 0x4fc <GIO_SetPinValue+0x23e>
 2e2:	8b 81       	ldd	r24, Y+3	; 0x03
 2e4:	88 30       	cpi	r24, 0x08	; 8
 2e6:	08 f0       	brcs	.+2      	; 0x2ea <GIO_SetPinValue+0x2c>
 2e8:	09 c1       	rjmp	.+530    	; 0x4fc <GIO_SetPinValue+0x23e>
 2ea:	8c 81       	ldd	r24, Y+4	; 0x04
 2ec:	81 30       	cpi	r24, 0x01	; 1
 2ee:	21 f0       	breq	.+8      	; 0x2f8 <GIO_SetPinValue+0x3a>
 2f0:	8c 81       	ldd	r24, Y+4	; 0x04
 2f2:	88 23       	and	r24, r24
 2f4:	09 f0       	breq	.+2      	; 0x2f8 <GIO_SetPinValue+0x3a>
 2f6:	02 c1       	rjmp	.+516    	; 0x4fc <GIO_SetPinValue+0x23e>
			&& (copy_u8Value == DIO_Output_high
					|| copy_u8Value == DIO_Output_low)) {
		switch (copy_u8PORTID) {
 2f8:	8a 81       	ldd	r24, Y+2	; 0x02
 2fa:	28 2f       	mov	r18, r24
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	3e 87       	std	Y+14, r19	; 0x0e
 300:	2d 87       	std	Y+13, r18	; 0x0d
 302:	8d 85       	ldd	r24, Y+13	; 0x0d
 304:	9e 85       	ldd	r25, Y+14	; 0x0e
 306:	81 30       	cpi	r24, 0x01	; 1
 308:	91 05       	cpc	r25, r1
 30a:	09 f4       	brne	.+2      	; 0x30e <GIO_SetPinValue+0x50>
 30c:	4f c0       	rjmp	.+158    	; 0x3ac <GIO_SetPinValue+0xee>
 30e:	2d 85       	ldd	r18, Y+13	; 0x0d
 310:	3e 85       	ldd	r19, Y+14	; 0x0e
 312:	22 30       	cpi	r18, 0x02	; 2
 314:	31 05       	cpc	r19, r1
 316:	2c f4       	brge	.+10     	; 0x322 <GIO_SetPinValue+0x64>
 318:	8d 85       	ldd	r24, Y+13	; 0x0d
 31a:	9e 85       	ldd	r25, Y+14	; 0x0e
 31c:	00 97       	sbiw	r24, 0x00	; 0
 31e:	71 f0       	breq	.+28     	; 0x33c <GIO_SetPinValue+0x7e>
 320:	eb c0       	rjmp	.+470    	; 0x4f8 <GIO_SetPinValue+0x23a>
 322:	2d 85       	ldd	r18, Y+13	; 0x0d
 324:	3e 85       	ldd	r19, Y+14	; 0x0e
 326:	22 30       	cpi	r18, 0x02	; 2
 328:	31 05       	cpc	r19, r1
 32a:	09 f4       	brne	.+2      	; 0x32e <GIO_SetPinValue+0x70>
 32c:	77 c0       	rjmp	.+238    	; 0x41c <GIO_SetPinValue+0x15e>
 32e:	8d 85       	ldd	r24, Y+13	; 0x0d
 330:	9e 85       	ldd	r25, Y+14	; 0x0e
 332:	83 30       	cpi	r24, 0x03	; 3
 334:	91 05       	cpc	r25, r1
 336:	09 f4       	brne	.+2      	; 0x33a <GIO_SetPinValue+0x7c>
 338:	a9 c0       	rjmp	.+338    	; 0x48c <GIO_SetPinValue+0x1ce>
 33a:	de c0       	rjmp	.+444    	; 0x4f8 <GIO_SetPinValue+0x23a>
		case DIO_PortA:
			switch (copy_u8Value) {
 33c:	8c 81       	ldd	r24, Y+4	; 0x04
 33e:	28 2f       	mov	r18, r24
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	3c 87       	std	Y+12, r19	; 0x0c
 344:	2b 87       	std	Y+11, r18	; 0x0b
 346:	8b 85       	ldd	r24, Y+11	; 0x0b
 348:	9c 85       	ldd	r25, Y+12	; 0x0c
 34a:	00 97       	sbiw	r24, 0x00	; 0
 34c:	d1 f0       	breq	.+52     	; 0x382 <GIO_SetPinValue+0xc4>
 34e:	2b 85       	ldd	r18, Y+11	; 0x0b
 350:	3c 85       	ldd	r19, Y+12	; 0x0c
 352:	21 30       	cpi	r18, 0x01	; 1
 354:	31 05       	cpc	r19, r1
 356:	09 f0       	breq	.+2      	; 0x35a <GIO_SetPinValue+0x9c>
 358:	cf c0       	rjmp	.+414    	; 0x4f8 <GIO_SetPinValue+0x23a>
			case DIO_Output_high:
				SET_BIT(PORTA, copy_u8PINID);
 35a:	ab e3       	ldi	r26, 0x3B	; 59
 35c:	b0 e0       	ldi	r27, 0x00	; 0
 35e:	eb e3       	ldi	r30, 0x3B	; 59
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	80 81       	ld	r24, Z
 364:	48 2f       	mov	r20, r24
 366:	8b 81       	ldd	r24, Y+3	; 0x03
 368:	28 2f       	mov	r18, r24
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	02 2e       	mov	r0, r18
 372:	02 c0       	rjmp	.+4      	; 0x378 <GIO_SetPinValue+0xba>
 374:	88 0f       	add	r24, r24
 376:	99 1f       	adc	r25, r25
 378:	0a 94       	dec	r0
 37a:	e2 f7       	brpl	.-8      	; 0x374 <GIO_SetPinValue+0xb6>
 37c:	84 2b       	or	r24, r20
 37e:	8c 93       	st	X, r24
 380:	bb c0       	rjmp	.+374    	; 0x4f8 <GIO_SetPinValue+0x23a>
				break;
			case DIO_Output_low:
				CLR_BIT(PORTA, copy_u8PINID);
 382:	ab e3       	ldi	r26, 0x3B	; 59
 384:	b0 e0       	ldi	r27, 0x00	; 0
 386:	eb e3       	ldi	r30, 0x3B	; 59
 388:	f0 e0       	ldi	r31, 0x00	; 0
 38a:	80 81       	ld	r24, Z
 38c:	48 2f       	mov	r20, r24
 38e:	8b 81       	ldd	r24, Y+3	; 0x03
 390:	28 2f       	mov	r18, r24
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	02 2e       	mov	r0, r18
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <GIO_SetPinValue+0xe2>
 39c:	88 0f       	add	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	0a 94       	dec	r0
 3a2:	e2 f7       	brpl	.-8      	; 0x39c <GIO_SetPinValue+0xde>
 3a4:	80 95       	com	r24
 3a6:	84 23       	and	r24, r20
 3a8:	8c 93       	st	X, r24
 3aa:	a6 c0       	rjmp	.+332    	; 0x4f8 <GIO_SetPinValue+0x23a>
				break;
			}
			break;
		case DIO_PortB:
			switch (copy_u8Value) {
 3ac:	8c 81       	ldd	r24, Y+4	; 0x04
 3ae:	28 2f       	mov	r18, r24
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	3a 87       	std	Y+10, r19	; 0x0a
 3b4:	29 87       	std	Y+9, r18	; 0x09
 3b6:	89 85       	ldd	r24, Y+9	; 0x09
 3b8:	9a 85       	ldd	r25, Y+10	; 0x0a
 3ba:	00 97       	sbiw	r24, 0x00	; 0
 3bc:	d1 f0       	breq	.+52     	; 0x3f2 <GIO_SetPinValue+0x134>
 3be:	29 85       	ldd	r18, Y+9	; 0x09
 3c0:	3a 85       	ldd	r19, Y+10	; 0x0a
 3c2:	21 30       	cpi	r18, 0x01	; 1
 3c4:	31 05       	cpc	r19, r1
 3c6:	09 f0       	breq	.+2      	; 0x3ca <GIO_SetPinValue+0x10c>
 3c8:	97 c0       	rjmp	.+302    	; 0x4f8 <GIO_SetPinValue+0x23a>
			case DIO_Output_high:
				SET_BIT(PORTA, copy_u8PINID);
 3ca:	ab e3       	ldi	r26, 0x3B	; 59
 3cc:	b0 e0       	ldi	r27, 0x00	; 0
 3ce:	eb e3       	ldi	r30, 0x3B	; 59
 3d0:	f0 e0       	ldi	r31, 0x00	; 0
 3d2:	80 81       	ld	r24, Z
 3d4:	48 2f       	mov	r20, r24
 3d6:	8b 81       	ldd	r24, Y+3	; 0x03
 3d8:	28 2f       	mov	r18, r24
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	02 2e       	mov	r0, r18
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <GIO_SetPinValue+0x12a>
 3e4:	88 0f       	add	r24, r24
 3e6:	99 1f       	adc	r25, r25
 3e8:	0a 94       	dec	r0
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <GIO_SetPinValue+0x126>
 3ec:	84 2b       	or	r24, r20
 3ee:	8c 93       	st	X, r24
 3f0:	83 c0       	rjmp	.+262    	; 0x4f8 <GIO_SetPinValue+0x23a>
				break;
			case DIO_Output_low:
				CLR_BIT(PORTA, copy_u8PINID);
 3f2:	ab e3       	ldi	r26, 0x3B	; 59
 3f4:	b0 e0       	ldi	r27, 0x00	; 0
 3f6:	eb e3       	ldi	r30, 0x3B	; 59
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	80 81       	ld	r24, Z
 3fc:	48 2f       	mov	r20, r24
 3fe:	8b 81       	ldd	r24, Y+3	; 0x03
 400:	28 2f       	mov	r18, r24
 402:	30 e0       	ldi	r19, 0x00	; 0
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	02 2e       	mov	r0, r18
 40a:	02 c0       	rjmp	.+4      	; 0x410 <GIO_SetPinValue+0x152>
 40c:	88 0f       	add	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	0a 94       	dec	r0
 412:	e2 f7       	brpl	.-8      	; 0x40c <GIO_SetPinValue+0x14e>
 414:	80 95       	com	r24
 416:	84 23       	and	r24, r20
 418:	8c 93       	st	X, r24
 41a:	6e c0       	rjmp	.+220    	; 0x4f8 <GIO_SetPinValue+0x23a>
				break;
			}
			break;
		case DIO_PortC:
			switch (copy_u8Value) {
 41c:	8c 81       	ldd	r24, Y+4	; 0x04
 41e:	28 2f       	mov	r18, r24
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	38 87       	std	Y+8, r19	; 0x08
 424:	2f 83       	std	Y+7, r18	; 0x07
 426:	8f 81       	ldd	r24, Y+7	; 0x07
 428:	98 85       	ldd	r25, Y+8	; 0x08
 42a:	00 97       	sbiw	r24, 0x00	; 0
 42c:	d1 f0       	breq	.+52     	; 0x462 <GIO_SetPinValue+0x1a4>
 42e:	2f 81       	ldd	r18, Y+7	; 0x07
 430:	38 85       	ldd	r19, Y+8	; 0x08
 432:	21 30       	cpi	r18, 0x01	; 1
 434:	31 05       	cpc	r19, r1
 436:	09 f0       	breq	.+2      	; 0x43a <GIO_SetPinValue+0x17c>
 438:	5f c0       	rjmp	.+190    	; 0x4f8 <GIO_SetPinValue+0x23a>
			case DIO_Output_high:
				SET_BIT(PORTA, copy_u8PINID);
 43a:	ab e3       	ldi	r26, 0x3B	; 59
 43c:	b0 e0       	ldi	r27, 0x00	; 0
 43e:	eb e3       	ldi	r30, 0x3B	; 59
 440:	f0 e0       	ldi	r31, 0x00	; 0
 442:	80 81       	ld	r24, Z
 444:	48 2f       	mov	r20, r24
 446:	8b 81       	ldd	r24, Y+3	; 0x03
 448:	28 2f       	mov	r18, r24
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	02 2e       	mov	r0, r18
 452:	02 c0       	rjmp	.+4      	; 0x458 <GIO_SetPinValue+0x19a>
 454:	88 0f       	add	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	0a 94       	dec	r0
 45a:	e2 f7       	brpl	.-8      	; 0x454 <GIO_SetPinValue+0x196>
 45c:	84 2b       	or	r24, r20
 45e:	8c 93       	st	X, r24
 460:	4b c0       	rjmp	.+150    	; 0x4f8 <GIO_SetPinValue+0x23a>
				break;
			case DIO_Output_low:
				CLR_BIT(PORTA, copy_u8PINID);
 462:	ab e3       	ldi	r26, 0x3B	; 59
 464:	b0 e0       	ldi	r27, 0x00	; 0
 466:	eb e3       	ldi	r30, 0x3B	; 59
 468:	f0 e0       	ldi	r31, 0x00	; 0
 46a:	80 81       	ld	r24, Z
 46c:	48 2f       	mov	r20, r24
 46e:	8b 81       	ldd	r24, Y+3	; 0x03
 470:	28 2f       	mov	r18, r24
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	02 2e       	mov	r0, r18
 47a:	02 c0       	rjmp	.+4      	; 0x480 <GIO_SetPinValue+0x1c2>
 47c:	88 0f       	add	r24, r24
 47e:	99 1f       	adc	r25, r25
 480:	0a 94       	dec	r0
 482:	e2 f7       	brpl	.-8      	; 0x47c <GIO_SetPinValue+0x1be>
 484:	80 95       	com	r24
 486:	84 23       	and	r24, r20
 488:	8c 93       	st	X, r24
 48a:	36 c0       	rjmp	.+108    	; 0x4f8 <GIO_SetPinValue+0x23a>
				break;
			}
			break;
		case DIO_PortD:
			switch (copy_u8Value) {
 48c:	8c 81       	ldd	r24, Y+4	; 0x04
 48e:	28 2f       	mov	r18, r24
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	3e 83       	std	Y+6, r19	; 0x06
 494:	2d 83       	std	Y+5, r18	; 0x05
 496:	8d 81       	ldd	r24, Y+5	; 0x05
 498:	9e 81       	ldd	r25, Y+6	; 0x06
 49a:	00 97       	sbiw	r24, 0x00	; 0
 49c:	c9 f0       	breq	.+50     	; 0x4d0 <GIO_SetPinValue+0x212>
 49e:	2d 81       	ldd	r18, Y+5	; 0x05
 4a0:	3e 81       	ldd	r19, Y+6	; 0x06
 4a2:	21 30       	cpi	r18, 0x01	; 1
 4a4:	31 05       	cpc	r19, r1
 4a6:	41 f5       	brne	.+80     	; 0x4f8 <GIO_SetPinValue+0x23a>
			case DIO_Output_high:
				SET_BIT(PORTA, copy_u8PINID);
 4a8:	ab e3       	ldi	r26, 0x3B	; 59
 4aa:	b0 e0       	ldi	r27, 0x00	; 0
 4ac:	eb e3       	ldi	r30, 0x3B	; 59
 4ae:	f0 e0       	ldi	r31, 0x00	; 0
 4b0:	80 81       	ld	r24, Z
 4b2:	48 2f       	mov	r20, r24
 4b4:	8b 81       	ldd	r24, Y+3	; 0x03
 4b6:	28 2f       	mov	r18, r24
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	02 2e       	mov	r0, r18
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <GIO_SetPinValue+0x208>
 4c2:	88 0f       	add	r24, r24
 4c4:	99 1f       	adc	r25, r25
 4c6:	0a 94       	dec	r0
 4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <GIO_SetPinValue+0x204>
 4ca:	84 2b       	or	r24, r20
 4cc:	8c 93       	st	X, r24
 4ce:	14 c0       	rjmp	.+40     	; 0x4f8 <GIO_SetPinValue+0x23a>
				break;
			case DIO_Output_low:
				CLR_BIT(PORTA, copy_u8PINID);
 4d0:	ab e3       	ldi	r26, 0x3B	; 59
 4d2:	b0 e0       	ldi	r27, 0x00	; 0
 4d4:	eb e3       	ldi	r30, 0x3B	; 59
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	80 81       	ld	r24, Z
 4da:	48 2f       	mov	r20, r24
 4dc:	8b 81       	ldd	r24, Y+3	; 0x03
 4de:	28 2f       	mov	r18, r24
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	02 2e       	mov	r0, r18
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <GIO_SetPinValue+0x230>
 4ea:	88 0f       	add	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	0a 94       	dec	r0
 4f0:	e2 f7       	brpl	.-8      	; 0x4ea <GIO_SetPinValue+0x22c>
 4f2:	80 95       	com	r24
 4f4:	84 23       	and	r24, r20
 4f6:	8c 93       	st	X, r24
				break;
			}
			break;
		}
		local_error_value = 1;
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	89 83       	std	Y+1, r24	; 0x01
	}
	return local_error_value;
 4fc:	89 81       	ldd	r24, Y+1	; 0x01
}
 4fe:	2e 96       	adiw	r28, 0x0e	; 14
 500:	0f b6       	in	r0, 0x3f	; 63
 502:	f8 94       	cli
 504:	de bf       	out	0x3e, r29	; 62
 506:	0f be       	out	0x3f, r0	; 63
 508:	cd bf       	out	0x3d, r28	; 61
 50a:	cf 91       	pop	r28
 50c:	df 91       	pop	r29
 50e:	08 95       	ret

00000510 <delay>:
 *      Author: Shorouk
 */
#define F_CPU 8000000UL
#include "../MCAL/GPIO/DIO_interface.h"

void delay(u16 time_ms) {
 510:	df 93       	push	r29
 512:	cf 93       	push	r28
 514:	00 d0       	rcall	.+0      	; 0x516 <delay+0x6>
 516:	00 d0       	rcall	.+0      	; 0x518 <delay+0x8>
 518:	00 d0       	rcall	.+0      	; 0x51a <delay+0xa>
 51a:	cd b7       	in	r28, 0x3d	; 61
 51c:	de b7       	in	r29, 0x3e	; 62
 51e:	9e 83       	std	Y+6, r25	; 0x06
 520:	8d 83       	std	Y+5, r24	; 0x05
	u16 i, j;
	for (i = 0; i < time_ms; i++) {
 522:	1c 82       	std	Y+4, r1	; 0x04
 524:	1b 82       	std	Y+3, r1	; 0x03
 526:	14 c0       	rjmp	.+40     	; 0x550 <delay+0x40>
		for (j = 0; j < F_CPU / 8000; j++) {
 528:	1a 82       	std	Y+2, r1	; 0x02
 52a:	19 82       	std	Y+1, r1	; 0x01
 52c:	06 c0       	rjmp	.+12     	; 0x53a <delay+0x2a>
			__asm("NOP");
 52e:	00 00       	nop
#include "../MCAL/GPIO/DIO_interface.h"

void delay(u16 time_ms) {
	u16 i, j;
	for (i = 0; i < time_ms; i++) {
		for (j = 0; j < F_CPU / 8000; j++) {
 530:	89 81       	ldd	r24, Y+1	; 0x01
 532:	9a 81       	ldd	r25, Y+2	; 0x02
 534:	01 96       	adiw	r24, 0x01	; 1
 536:	9a 83       	std	Y+2, r25	; 0x02
 538:	89 83       	std	Y+1, r24	; 0x01
 53a:	89 81       	ldd	r24, Y+1	; 0x01
 53c:	9a 81       	ldd	r25, Y+2	; 0x02
 53e:	23 e0       	ldi	r18, 0x03	; 3
 540:	88 3e       	cpi	r24, 0xE8	; 232
 542:	92 07       	cpc	r25, r18
 544:	a0 f3       	brcs	.-24     	; 0x52e <delay+0x1e>
#define F_CPU 8000000UL
#include "../MCAL/GPIO/DIO_interface.h"

void delay(u16 time_ms) {
	u16 i, j;
	for (i = 0; i < time_ms; i++) {
 546:	8b 81       	ldd	r24, Y+3	; 0x03
 548:	9c 81       	ldd	r25, Y+4	; 0x04
 54a:	01 96       	adiw	r24, 0x01	; 1
 54c:	9c 83       	std	Y+4, r25	; 0x04
 54e:	8b 83       	std	Y+3, r24	; 0x03
 550:	2b 81       	ldd	r18, Y+3	; 0x03
 552:	3c 81       	ldd	r19, Y+4	; 0x04
 554:	8d 81       	ldd	r24, Y+5	; 0x05
 556:	9e 81       	ldd	r25, Y+6	; 0x06
 558:	28 17       	cp	r18, r24
 55a:	39 07       	cpc	r19, r25
 55c:	28 f3       	brcs	.-54     	; 0x528 <delay+0x18>
		for (j = 0; j < F_CPU / 8000; j++) {
			__asm("NOP");
		}
	}
}
 55e:	26 96       	adiw	r28, 0x06	; 6
 560:	0f b6       	in	r0, 0x3f	; 63
 562:	f8 94       	cli
 564:	de bf       	out	0x3e, r29	; 62
 566:	0f be       	out	0x3f, r0	; 63
 568:	cd bf       	out	0x3d, r28	; 61
 56a:	cf 91       	pop	r28
 56c:	df 91       	pop	r29
 56e:	08 95       	ret

00000570 <main>:

int main() {
 570:	df 93       	push	r29
 572:	cf 93       	push	r28
 574:	cd b7       	in	r28, 0x3d	; 61
 576:	de b7       	in	r29, 0x3e	; 62
	GIO_SetPinDirection(DIO_PortA, DIO_Pin0, DIO_OutputPinDirection);
 578:	80 e0       	ldi	r24, 0x00	; 0
 57a:	60 e0       	ldi	r22, 0x00	; 0
 57c:	41 e0       	ldi	r20, 0x01	; 1
 57e:	0e 94 36 00 	call	0x6c	; 0x6c <GIO_SetPinDirection>
	GIO_SetPinDirection(DIO_PortA, DIO_Pin1, DIO_OutputPinDirection);
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	61 e0       	ldi	r22, 0x01	; 1
 586:	41 e0       	ldi	r20, 0x01	; 1
 588:	0e 94 36 00 	call	0x6c	; 0x6c <GIO_SetPinDirection>
	GIO_SetPinDirection(DIO_PortA, DIO_Pin2, DIO_OutputPinDirection);
 58c:	80 e0       	ldi	r24, 0x00	; 0
 58e:	62 e0       	ldi	r22, 0x02	; 2
 590:	41 e0       	ldi	r20, 0x01	; 1
 592:	0e 94 36 00 	call	0x6c	; 0x6c <GIO_SetPinDirection>

	while (1) {

		GIO_SetPinValue(DIO_PortA, DIO_Pin2, DIO_Output_high);
 596:	80 e0       	ldi	r24, 0x00	; 0
 598:	62 e0       	ldi	r22, 0x02	; 2
 59a:	41 e0       	ldi	r20, 0x01	; 1
 59c:	0e 94 5f 01 	call	0x2be	; 0x2be <GIO_SetPinValue>
		delay(5000);
 5a0:	88 e8       	ldi	r24, 0x88	; 136
 5a2:	93 e1       	ldi	r25, 0x13	; 19
 5a4:	0e 94 88 02 	call	0x510	; 0x510 <delay>
		GIO_SetPinValue(DIO_PortA, DIO_Pin2, DIO_Output_low);
 5a8:	80 e0       	ldi	r24, 0x00	; 0
 5aa:	62 e0       	ldi	r22, 0x02	; 2
 5ac:	40 e0       	ldi	r20, 0x00	; 0
 5ae:	0e 94 5f 01 	call	0x2be	; 0x2be <GIO_SetPinValue>
		GIO_SetPinValue(DIO_PortA, DIO_Pin1, DIO_Output_high);
 5b2:	80 e0       	ldi	r24, 0x00	; 0
 5b4:	61 e0       	ldi	r22, 0x01	; 1
 5b6:	41 e0       	ldi	r20, 0x01	; 1
 5b8:	0e 94 5f 01 	call	0x2be	; 0x2be <GIO_SetPinValue>
		delay(2000);
 5bc:	80 ed       	ldi	r24, 0xD0	; 208
 5be:	97 e0       	ldi	r25, 0x07	; 7
 5c0:	0e 94 88 02 	call	0x510	; 0x510 <delay>
		GIO_SetPinValue(DIO_PortA, DIO_Pin1, DIO_Output_low);
 5c4:	80 e0       	ldi	r24, 0x00	; 0
 5c6:	61 e0       	ldi	r22, 0x01	; 1
 5c8:	40 e0       	ldi	r20, 0x00	; 0
 5ca:	0e 94 5f 01 	call	0x2be	; 0x2be <GIO_SetPinValue>
		GIO_SetPinValue(DIO_PortA, DIO_Pin0, DIO_Output_high);
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	60 e0       	ldi	r22, 0x00	; 0
 5d2:	41 e0       	ldi	r20, 0x01	; 1
 5d4:	0e 94 5f 01 	call	0x2be	; 0x2be <GIO_SetPinValue>
		delay(5000);
 5d8:	88 e8       	ldi	r24, 0x88	; 136
 5da:	93 e1       	ldi	r25, 0x13	; 19
 5dc:	0e 94 88 02 	call	0x510	; 0x510 <delay>
		GIO_SetPinValue(DIO_PortA, DIO_Pin0, DIO_Output_low);
 5e0:	80 e0       	ldi	r24, 0x00	; 0
 5e2:	60 e0       	ldi	r22, 0x00	; 0
 5e4:	40 e0       	ldi	r20, 0x00	; 0
 5e6:	0e 94 5f 01 	call	0x2be	; 0x2be <GIO_SetPinValue>
 5ea:	d5 cf       	rjmp	.-86     	; 0x596 <main+0x26>

000005ec <_exit>:
 5ec:	f8 94       	cli

000005ee <__stop_program>:
 5ee:	ff cf       	rjmp	.-2      	; 0x5ee <__stop_program>
